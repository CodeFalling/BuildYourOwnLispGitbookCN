{
  "name": "gitbook",
  "version": "0.1.1",
  "description": "Library and cmd utility to generate GitBooks",
  "main": "lib/index.js",
  "dependencies": {
    "q": "1.0.1",
    "lodash": "2.4.1",
    "marked": "0.3.2",
    "swig": "1.3.2",
    "send": "0.2.0",
    "fstream-ignore": "0.0.7",
    "commander": "2.2.0",
    "fs-extra": "0.8.1",
    "highlight.js": "8.0.0"
  },
  "devDependencies": {
    "mocha": "1.18.2",
    "grunt": "~0.4.2",
    "grunt-cli": "0.1.11",
    "grunt-contrib-less": "~0.5.0",
    "grunt-contrib-requirejs": "0.4.1"
  },
  "scripts": {
    "test": "export TESTING=true; mocha --reporter list"
  },
  "bin": {
    "gitbook": "./bin/gitbook.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/GitbookIO/gitbook.git"
  },
  "keywords": [
    "git",
    "book",
    "gitbook"
  ],
  "author": {
    "name": "Aaron O'Mullan",
    "email": "aaron.omullan@friendco.de"
  },
  "license": "Apache 2",
  "bugs": {
    "url": "https://github.com/GitbookIO/gitbook/issues"
  },
  "readme": "GitBook\n=======\n\n[![Build Status](https://travis-ci.org/GitbookIO/gitbook.png?branch=master)](https://travis-ci.org/GitbookIO/gitbook)\n\nGitBook is a command line tool (and Node.js library) for building beautiful programming books and exercises using GitHub/Git and Markdown. You can see an example: [Learn Javascript](http://gitbookio.github.io/javascript/).\n\n![Image](https://raw.github.com/GitbookIO/gitbook/master/preview.png)\n\n## How to use it:\n\nGitBook can be installed from **NPM** using:\n\n```\n$ npm install gitbook -g\n```\n\nYou can serve a repository as a book using:\n\n```\n$ gitbook serve ./repository\n```\n\nOr simply build the static website using:\n\n```\n$ gitbook build ./repository --output=./outputFolder\n```\n\nOptions for commands `build` and `serve` are:\n\n```\n-t, --title <name> Name of the book to generate, defaults to repo name\n-i, --intro <intro> Description of the book to generate\n-g, --github <repo_path> ID of github repo like : username/repo\n```\n\n## Book Format\n\nA book is a GitHub repository containing at least 2 files: `README.md` and `SUMMARY.md`.\n\n#### README.md\n\nAs usual, it should contains an introduction for your book. It will be automatically added to the final summary.\n\n#### SUMMARY.md\n\nThe `SUMMARY.md` defines your book's structure. It should contain a list of chapters, linking to their respective pages.\n\nExample:\n\n```\n# Summary\n\nThis is the summary of my book.\n\n* [section 1](section1/README.md)\n    * [example 1](section1/example1.md)\n    * [example 2](section1/example2.md)\n* [section 2](section2/README.md)\n    * [example 1](section2/example1.md)\n```\n\nFiles that are not included in the `SUMMARY.md` will not be processed by `gitbook`.\n\n#### Exercises\n\nA book can contain interactive exercises (currently only in Javascript but Python and Ruby are coming soon ;) ). An exercise is a code challenge provided to the reader, which is given a code editor to write a solution which is checked against the book author's validation code.\n\nAn exercise is defined by 4 simple parts:\n\n* Exercise **Message**/Goals (in markdown/text)\n* **Initial** code to show to the user, providing a starting point\n* **Solution** code, being a correct solution to the exercise\n* **Validation** code that tests the correctness of the user's input\n\nExercises need to start and finish with a separation bar (```---``` or ```***```). It should contain 3 code elements (**base**, **solution** and **validation**).\n\n    ---\n    \n    Define a variable `x` equal to 10.\n    \n    ```js\n    var x = \n    ```\n    \n    ```js\n    var x = 10;\n    ```\n    \n    ```js\n    assert(x == 10);\n    ```\n    \n    ---\n",
  "readmeFilename": "README.md",
  "_id": "gitbook@0.1.1",
  "dist": {
    "shasum": "ac20a9aa16f07bd61ad7b935a294c8a462e67cf6"
  },
  "_from": "gitbook@0.1.1",
  "_resolved": "https://registry.npmjs.org/gitbook/-/gitbook-0.1.1.tgz"
}
